# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build-tls:
    machine:
      enabled: true
      image: ubuntu-1604:202004-01
    steps:
      - checkout
      - run:
          name: Setting GOPATH
          command: |
            go version
            go env -w GOPATH=$HOME/go
      - run:
          name: Generate a root CA and a server certificate using redis helpers
          command: |
            git clone git://github.com/antirez/redis.git --branch 6.0.6
            cd redis
            ./utils/gen-test-certs.sh
            cd ..
      - run:
          name: Copy RediSearch
          command: |
            docker run --rm --entrypoint cat redislabs/redisearch:edge /usr/lib/redis/modules/redisearch.so > redisearch.so
            chmod 755 redisearch.so
            docker run --rm --entrypoint cat redislabs/redisearch:edge /usr/lib/redis/modules/rejson.so > rejson.so
            chmod 755 rejson.so

      - run:
          name: Run RediSearch with tls support
          command: |
            docker run -d -v $(pwd)/redisearch.so:/data/redisearch.so \
                       -v $(pwd)/rejson.so:/data/rejson.so \
                       -v $(pwd)/redis/tests/tls/:/data \
                       -p 6379:6379 redisfab/redis:6.2-latest-x64-bullseye redis-server \
                       --tls-port 6379 --port 0  \
                       --tls-cert-file /data/redis.crt  \
                       --tls-key-file /data/redis.key  \
                       --tls-ca-cert-file /data/ca.crt \
                       --tls-auth-clients no --loadmodule /data/redisearch.so --loadmodule /data/rejson.so
      - run:
          name: Run Examples
          command: |
            make examples TLS_CERT=redis/tests/tls/redis.crt \
                          TLS_KEY=redis/tests/tls/redis.key \
                          TLS_CACERT=redis/tests/tls/ca.crt


  build: # test with redisearch:latest
    docker:
      - image: circleci/golang:1.16
      - image: redislabs/redisearch:latest

    working_directory: /go/src/github.com/RediSearch/redisearch-go
    steps:
      - checkout
      - run: make get
      - run: make checkfmt
      - run: make test
      - run: make godoc_examples
      - run: make coverage
      - run: bash <(curl -s https://raw.githubusercontent.com/codecov/codecov-bash/master/codecov) -t ${CODECOV_TOKEN}

  build-v16:
    docker:
      - image: circleci/golang:1.12
      - image: redislabs/redisearch:1.6.15

    working_directory: /go/src/github.com/RediSearch/redisearch-go
    steps:
      - checkout
      - run: make test

  build-edge: # test nightly with redisearch:edge
    docker:
      - image: circleci/golang:1.12
      - image: redislabs/redisearch:edge

    working_directory: /go/src/github.com/RediSearch/redisearch-go
    steps:
      - checkout
      - run: make test

workflows:
  version: 2
  commit:
    jobs:
      - build-tls
      - build
      - build-edge
      - build-v16
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build-edge
      - build-tls
